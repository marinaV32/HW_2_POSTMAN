{
	"info": {
		"_postman_id": "39766a46-8972-4e42-a4b0-1e4cb237bf2f",
		"name": "HW_1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New Folder",
			"item": [
				{
					"name": "hw_2_first",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"test name\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Marina",
									"type": "default",
									"disabled": true
								},
								{
									"key": "age",
									"value": "26",
									"type": "default",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "2000",
									"type": "default",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://162.55.220.72:5005/first?name=Marina&age=26&salary=2000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							],
							"query": [
								{
									"key": "name",
									"value": "Marina"
								},
								{
									"key": "age",
									"value": "26"
								},
								{
									"key": "salary",
									"value": "2000"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EP_3_object_info_1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_1?name=Marina&age=26&weight=50",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "weight",
							"value": "50"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_1_get_method",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/get_method?name=Marina&age=26",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "26"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "hw2_user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// .3. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"let req = request.data;\r",
							"// console.log(req)\r",
							"\r",
							"// // 4. Проверить, что name в ответе равно name s request\r",
							"let req_name = req.name;\r",
							"let resp_name = jsonData.name;\r",
							"pm.test(\"name_request\", function () {\r",
							"     pm.expect(req_name).to.eql(resp_name);\r",
							"});\r",
							"\r",
							"// // // 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"\r",
							"let req_age = req.age;\r",
							"let resp_age = jsonData.age;\r",
							"pm.test(\"age_request\", function () {\r",
							"     pm.expect(req_age).to.eql(resp_age);\r",
							"});\r",
							"\r",
							"// // // 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"\r",
							"let req_salary = req.salary;\r",
							"let resp_salary = jsonData.salary;\r",
							"pm.test(\"salary_request\", function () {\r",
							"     pm.expect(+req_salary).to.eql(resp_salary);\r",
							"});\r",
							"\r",
							"// // 7. Спарсить request\r",
							"let req_1 = request.data;\r",
							"\r",
							"// // 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"let name_request = req.name;\r",
							"pm.test(\"Name check\", function () {\r",
							"     pm.expect(req.name).to.eql(name_request);\r",
							"});\r",
							"// // 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"let age_request = req.age;\r",
							"pm.test(\"Age check\", function () {\r",
							"     pm.expect(req.age).to.eql(age_request);\r",
							"});\r",
							"// // 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"let salary_request = req.salary;\r",
							"pm.test(\"Salary check\", function () {\r",
							"     pm.expect(req.salary).to.eql(salary_request);\r",
							"});\r",
							"\r",
							"// // 11. Вывести в консоль параметр family из response.\r",
							"let family_1 = jsonData.family\r",
							"console.log(family_1)\r",
							"\r",
							"// // 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"let u_salary_1_5_year = req.salary *4;\r",
							"pm.test(\"Salary_2 check\", function () {\r",
							"     pm.expect(req.salary *4).to.eql(u_salary_1_5_year);\r",
							"});\r",
							"// console.log( u_salary_1_5_year)\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Marina",
							"type": "default"
						},
						{
							"key": "age",
							"value": "26",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2_user_info_3",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Marina",
							"type": "default"
						},
						{
							"key": "age",
							"value": "26",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4_object_info_2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_2?name=Marina&age=26&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5_object_info_3",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Marina&age=26&salary=3000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "hw2_2_object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Спарсить request.\r",
							"    let jsonData = pm.response.json();\r",
							"     let req = pm.request.url.query.toObject()\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"let name_request = req.name;\r",
							"pm.test(\"Name test\", function () {\r",
							"    pm.expect(req.name).to.eql(name_request);\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"let age_request = req.age;\r",
							"pm.test(\"Age test\", function () {\r",
							"    pm.expect(req.age).to.eql(age_request);\r",
							"});\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"// let salaty_request = req.salary;\r",
							"let salary_request = Number('12000');\r",
							"pm.test(\"Salary test\", function () {\r",
							"    pm.expect(Number('12000')).to.eql(salary_request);\r",
							"});\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"let resp_family = jsonData.family;\r",
							"console.log(resp_family)\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"\r",
							"let dog_name = jsonData.family.pets.dog\r",
							"pm.test(\"Dog_name\", () => {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"// console.log(dog_name)\r",
							"\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"let dog_age = jsonData.family.pets.dog\r",
							"pm.test(\"Dog_age\", () => {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"// console.log(dog_age)\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"let luky_name = jsonData.family.pets.dog.name\r",
							"pm.test(\"Luky_name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(luky_name);\r",
							"});\r",
							"console.log(luky_name)\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"let four_age = jsonData.family.pets.dog.age\r",
							"pm.test(\"Four_age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(four_age);\r",
							"});\r",
							"console.log(four_age)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Marina&age=26&salary=3000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_6_object_info_4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Marina&age=26&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "hw2_3_object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Спарсить request.\r",
							"let jsonData = pm.response.json()\r",
							" let req = pm.request.url.query.toObject()\r",
							"\r",
							"    // console.log(req)\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"let name_request = req.name;\r",
							"pm.test(\"Name test\", function () {\r",
							"    pm.expect(req.name).to.eql(name_request);\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"let age_request = req.age;\r",
							"pm.test(\"Age test\", function () {\r",
							"    pm.expect(req.age).to.eql(age_request);\r",
							"});\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"console.log (req.salary)\r",
							"\r",
							"// // 8. Вывести в консоль параметр salary из response.\r",
							"console.log(jsonData.salary)\r",
							"\r",
							"// // // 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(jsonData.salary[0])\r",
							"\r",
							"// // // 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(jsonData.salary[1])\r",
							"\r",
							"// // // 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(jsonData.salary[2])\r",
							"\r",
							"// // 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"Salary test\", function () { \r",
							"pm.expect(jsonData.salary[0]).to.eql(+req.salary)\r",
							"});\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из \r",
							"pm.test(\"Salary test_1\", function () { \r",
							"pm.expect(+jsonData.salary[1]).to.eql(+req.salary * 2)\r",
							"});\r",
							"\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Salary test_2\", function () { \r",
							"pm.expect(+jsonData.salary[2]).to.eql(+req.salary * 3)\r",
							"});\r",
							"// 15. Создать в окружении переменную name\r",
							"\r",
							"pm.environment.set(\"name\");\r",
							"// 16. Создать в окружении переменную age\r",
							"pm.environment.set(\"age\");\r",
							"// 17. Создать в окружении переменную salary\r",
							"pm.environment.set(\"salary\");\r",
							"// 18. Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", req.name);\r",
							"// 19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\", req.age);\r",
							"// 20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", req.salary);\r",
							"\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"let salary = {\r",
							"    [0]:2000,\r",
							"    [1]:4000,\r",
							"    [2]:6000};\r",
							"      for (let salary_req in salary) {\r",
							"       console.log(\"salary.\" + salary_req + \" = \" + salary[salary_req]);\r",
							"       }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Marina&age=26&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_7_user_info_2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Marina",
							"type": "default"
						},
						{
							"key": "age",
							"value": "26",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "hw2_4_user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"pm.environment.set(\"salary\", 2000);\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"pm.environment.set(\"age\", 26);\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"pm.environment.set(\"name\", \"Marina\");\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 6. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"// 7. Спарсить request.\r",
							"let post_form_data = request.data\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"const body = pm.response.json();\r",
							"pm.test(\"start_qa_salary\", () => {\r",
							"    pm.expect(body).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"// console.log(body)\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months\", () => {\r",
							"    pm.expect(body).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"// console.log(body)\r",
							"\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", () => {\r",
							"    pm.expect(body).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"// console.log(body)\r",
							"\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", () => {\r",
							"    pm.expect(body).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"// console.log(body)\r",
							"\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", () => {\r",
							"    pm.expect(body).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"// console.log(body)\r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"\r",
							"pm.test(\"Person\", () => {\r",
							"    pm.expect(body).to.have.property(\"person\");\r",
							"});\r",
							"console.log(body)\r",
							"\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Salary test\", function () { \r",
							"pm.expect(+jsonData.start_qa_salary).to.eql(+post_form_data.salary)\r",
							"});\r",
							"console.log(+jsonData.start_qa_salary)\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Salary_2 test\", function () { \r",
							"pm.expect(+jsonData.qa_salary_after_6_months).to.eql(+post_form_data.salary *2)\r",
							"});\r",
							"console.log(+jsonData.qa_salary_after_6_months)\r",
							"\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"Salary_3 test\", function () { \r",
							"pm.expect(+jsonData.qa_salary_after_12_months).to.eql(+post_form_data.salary *2.7)\r",
							"});\r",
							"console.log(+jsonData.qa_salary_after_12_months)\r",
							"\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"Salary_4 test\", function () { \r",
							"pm.expect(+jsonData[\"qa_salary_after_1.5_year\"]).to.eql(+post_form_data.salary *3.3)\r",
							"});\r",
							"console.log(+jsonData[\"qa_salary_after_1.5_year\"])\r",
							"\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"Salary_5 test\", function () { \r",
							"pm.expect(+jsonData[\"qa_salary_after_3.5_years\"]).to.eql(+post_form_data.salary *3.8)\r",
							"});\r",
							"console.log(+jsonData[\"qa_salary_after_3.5_years\"])\r",
							"\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Salary u_name\", function () { \r",
							"pm.expect(+jsonData.person.u_name[1]).to.eql(+post_form_data.salary)\r",
							"});\r",
							"\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"Test u_age\", function () { \r",
							"pm.expect(+jsonData.person.u_age).to.eql(+post_form_data.age)\r",
							"});\r",
							"\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"Test u_salary_5_years\", function () { \r",
							"pm.expect(+jsonData.person.u_salary_5_years).to.eql(+post_form_data.salary *4.2)\r",
							"});\r",
							"\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"// Вариант 1\r",
							"// let person = {\r",
							"// u_age: 26,\r",
							"// u_name: [\"Marina\", 2000, 26],\r",
							"// u_salary_5_years: 8400.0\r",
							"// };\r",
							"\r",
							"// Вариант 2\r",
							"// let person = [26, [\"Marina\", 2000, 26], 8400.0 ]\r",
							"// for (let i = 0; i < person.length; i++) {\r",
							"// \tconsole.log(person[i]); // выведет 1, 2, 3, 4, 5\r",
							"// };\r",
							"\r",
							"// Вариант 3\r",
							"jsonData.person = {\r",
							"    [0]:26,\r",
							"    [1]:[\"Marina\", 2000, 26],\r",
							"    [2]:8400.0};\r",
							"      for (let i in jsonData.person) {\r",
							"       console.log(\"person.\" + i + \" = \" + jsonData.person[i]);\r",
							"       }\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "default"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}